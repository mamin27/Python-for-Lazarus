object Form1: TForm1
  Left = 868
  Height = 422
  Top = 243
  Width = 592
  VertScrollBar.Range = 210
  ActiveControl = Memo1
  Caption = 'Form1'
  ClientHeight = 422
  ClientWidth = 573
  Color = clBtnFace
  Font.Color = clWindowText
  Font.Height = 11
  Font.Name = 'MS Sans Serif'
  Font.Pitch = fpVariable
  OnCreate = FormCreate
  LCLVersion = '2.0.0.4'
  object Splitter1: TSplitter
    Cursor = crVSplit
    Left = 0
    Height = 3
    Top = 169
    Width = 573
    Align = alTop
    ResizeAnchor = akTop
  end
  object Memo1: TMemo
    Left = 0
    Height = 209
    Top = 172
    Width = 573
    Align = alClient
    Lines.Strings = (
      'import spam'
      'print(dir(spam))'
      'p = spam.CreatePoint(2, 5)'
      'print (p)'
      'p.OffsetBy( 3, 3 )'
      'print (p.x, p.y)'
      'print (dir(spam))'
      'print (spam.Point)'
      'print (''p = '', p, ''  --> '')'
      'if type(p) is spam.Point:'
      '  print (''p is a Point'')'
      'else:'
      '  print (''p is not a point'')'
      'p = 2'
      'print (''p = '', p, ''  --> '')'
      'if type(p) is spam.Point:'
      '  print (''p is a Point'')'
      'else:'
      '  print (''p is not a point'')'
      'p = spam.CreatePoint(2, 5)'
      'try:'
      '  print (''raising an error of class EBadPoint'')'
      '  p.RaiseError() # it will raise spam.EBadPoint'
      'except spam.PointError(what): #it shows you that you can intercept a parent class'
      '  print (''Catched an error dirived from PointError'')'
      '  print (''Error class = '', what.__class__, ''     a ='', what.a, ''   b ='', what.b, ''   c ='', what.c)'
      ''
      '# You can raise error from a Python script to !'
      'print (''------------------------------------------------------------------'')'
      'print (''Errors in a Python script'')'
      'try:'
      '  raise spam.EBadPoint(''this is a test !'')'
      'except:'
      '  pass'
      ''
      'try:'
      '  err = spam.EBadPoint()'
      '  err.a = 1'
      '  err.b = 2'
      '  err.c = 3'
      '  raise err'
      'except spam.PointError(what): #it shows you that you can intercept a parent class'
      '  print (''Catched an error dirived from PointError'')'
      '  print (''Error class = '', what.__class__, ''     a ='', what.a, ''   b ='', what.b, ''   c ='', what.c)'
      ''
      'if p == spam.CreatePoint(2, 5): '
      '  print (''Equal'')'
      'else:'
      '  print (''Not equal'')'
    )
    ScrollBars = ssVertical
    TabOrder = 0
  end
  object Panel1: TPanel
    Left = 0
    Height = 41
    Top = 381
    Width = 573
    Align = alBottom
    BevelOuter = bvNone
    ClientHeight = 41
    ClientWidth = 573
    TabOrder = 1
    object Button1: TButton
      Left = 8
      Height = 25
      Top = 8
      Width = 75
      Caption = 'Execute'
      OnClick = Button1Click
      TabOrder = 0
    end
  end
  object Memo2: TMemo
    Left = 0
    Height = 169
    Top = 0
    Width = 573
    Align = alTop
    TabOrder = 2
  end
  object PythonEngine1: TPythonEngine
    AutoLoad = False
    DllName = 'libpython3.8.so'
    APIVersion = 1013
    RegVersion = '3.7'
    UseLastKnownVersion = False
    InitScript.Strings = (
      'import sys'
      'print (''Python Dll: '',sys.version)'
      'print (sys.copyright)'
      'print'
    )
    IO = PythonGUIInputOutput1
    PyFlags = [pfUseClassExceptionsFlag]
    left = 16
    top = 16
  end
  object PythonModule1: TPythonModule
    Engine = PythonEngine1
    ModuleName = 'spam'
    Errors = <    
      item
        Name = 'PointError'
        ErrorType = etClass
      end    
      item
        Name = 'EBadPoint'
        ErrorType = etClass
        ParentClass.Name = 'PointError'
      end>
    left = 56
    top = 16
  end
  object PythonType1: TPythonType
    Engine = PythonEngine1
    OnInitialization = PythonType1Initialization
    TypeName = 'Point'
    Prefix = 'Create'
    Module = PythonModule1
    Services.Basic = [bsGetAttr, bsSetAttr, bsRepr, bsStr, bsRichCompare]
    Services.InplaceNumber = []
    Services.Number = []
    Services.Sequence = []
    Services.Mapping = []
    left = 96
    top = 16
  end
  object PythonGUIInputOutput1: TPythonGUIInputOutput
    UnicodeIO = True
    RawOutput = False
    Output = Memo2
    left = 136
    top = 16
  end
end
